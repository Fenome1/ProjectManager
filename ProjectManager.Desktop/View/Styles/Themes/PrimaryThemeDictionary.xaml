<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convertors="clr-namespace:ProjectManager.Desktop.View.Convertors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/View/Styles/Colors/ThemesColors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <convertors:IsNotNullConverter x:Key="IsNotNullConverter" />

    <Style x:Key="WindowBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColorPrimaryTheme}" />
        <Setter Property="CornerRadius" Value="12,12,19,19" />
        <Setter Property="BorderThickness" Value="2" />
    </Style>

    <Style x:Key="HideIconStyle" TargetType="Image">
        <Setter Property="Source" Value="/Assets/Images/PrimaryTheme/hide.png" />
    </Style>
    <Style x:Key="ExitIconStyle" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Assets/Images/PrimaryTheme/exit.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaxIconStyle" TargetType="Image">
        <Setter Property="Source" Value="/Assets/Images/PrimaryTheme/fullScreen.png" />
    </Style>
    <Style x:Key="CloseIconStyle" TargetType="Image">
        <Setter Property="Source" Value="/Assets/Images/PrimaryTheme/xCross.png" />
    </Style>

    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource SecondaryColorPrimaryTheme}" />
    </Style>

    <Style x:Key="MainWindowStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="18" />
        <Setter Property="Background" Value="{DynamicResource SecondaryColorPrimaryTheme}" />
    </Style>

    <Style x:Key="WindowBarStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource PrimaryColorPrimaryTheme}" />
        <Setter Property="CornerRadius" Value="10,10,0,0" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="{DynamicResource WhitneyMedium}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColorPrimaryTheme}" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Background" Value="{DynamicResource TertiaryColorPrimaryTheme}" />
        <Setter Property="FontFamily" Value="{DynamicResource WhitneyMedium}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColorPrimaryTheme}" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Background" Value="{DynamicResource TertiaryColorPrimaryTheme}" />
        <Setter Property="FontFamily" Value="{DynamicResource WhitneyMedium}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColorPrimaryTheme}" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="Button">
        <Setter Property="FontFamily" Value="{DynamicResource WhitneyMedium}" />
        <Setter Property="Background" Value="{DynamicResource TertiaryColorPrimaryTheme}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColorPrimaryTheme}" />
        <Setter Property="Padding" Value="10" />
    </Style>

    <Style x:Key="ThreeDotsButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel
                        x:Name="StackPanelContainer"
                        Width="15"
                        Height="25"
                        Background="Transparent"
                        Orientation="Vertical">
                        <Ellipse
                            x:Name="Ellipse1"
                            Width="5"
                            Height="5"
                            Margin="0,2,0,2"
                            Fill="{DynamicResource SixfoldColorPrimaryTheme}" />
                        <Ellipse
                            x:Name="Ellipse2"
                            Width="5"
                            Height="5"
                            Margin="0,0,0,2"
                            Fill="{DynamicResource SixfoldColorPrimaryTheme}" />
                        <Ellipse
                            x:Name="Ellipse3"
                            Width="5"
                            Height="5"
                            Margin="0,0,0,0"
                            Fill="{DynamicResource SixfoldColorPrimaryTheme}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse1" Property="Fill" Value="{DynamicResource SecondaryColorPrimaryTheme}" />
                            <Setter TargetName="Ellipse2" Property="Fill" Value="{DynamicResource SecondaryColorPrimaryTheme}" />
                            <Setter TargetName="Ellipse3" Property="Fill" Value="{DynamicResource SecondaryColorPrimaryTheme}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Ellipse1" Property="Fill" Value="{DynamicResource PrimaryColorPrimaryTheme}" />
                            <Setter TargetName="Ellipse2" Property="Fill" Value="{DynamicResource PrimaryColorPrimaryTheme}" />
                            <Setter TargetName="Ellipse3" Property="Fill" Value="{DynamicResource PrimaryColorPrimaryTheme}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem
                        Command="{Binding CreateNewBoardCommand}"
                        CommandParameter="{Binding}"
                        Header="Создать доску" />
                    <Separator />
                    <MenuItem
                        Command="{Binding UpdateBoardCommand}"
                        CommandParameter="{Binding}"
                        Header="Изменить" />
                    <MenuItem Command="{Binding DeleteBoardCommand}" Header="Удалить" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        Name="Border"
                        Margin="0,5,5,5"
                        Padding="10,2"
                        BorderThickness="1"
                        CornerRadius="5">
                        <ContentPresenter
                            x:Name="ContentSite"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource QuaternaryColorPrimaryTheme}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TertiaryColorPrimaryTheme}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ProfileNameStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColorPrimaryTheme}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AgenciesBoardStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource TertiaryColorPrimaryTheme}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColorPrimaryTheme}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="DefaultSeparatorStyle" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource PrimaryColorPrimaryTheme}" />
    </Style>

    <Style x:Key="TabControlDefaultStyle" TargetType="TabControl">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style
        x:Key="DeadlineBorderStyle"
        BasedOn="{StaticResource AgenciesBoardStyle}"
        TargetType="Border">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Deadline, Converter={StaticResource IsNotNullConverter}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="DeadlineTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Deadline, Converter={StaticResource IsNotNullConverter}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="PriorityBorderStyle"
        BasedOn="{StaticResource AgenciesBoardStyle}"
        TargetType="Border">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Priority, Converter={StaticResource IsNotNullConverter}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="PriorityTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Priority, Converter={StaticResource IsNotNullConverter}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ObjectiveStatusFalseStyle"
        BasedOn="{StaticResource AgenciesBoardStyle}"
        TargetType="Border">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ObjectiveStatusTrueStyle"
        BasedOn="{StaticResource AgenciesBoardStyle}"
        TargetType="Border">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>




</ResourceDictionary>